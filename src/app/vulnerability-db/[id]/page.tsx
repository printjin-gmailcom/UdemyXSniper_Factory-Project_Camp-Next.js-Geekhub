import ArticleDetail from '@/app/vulnerability-db/_components/ArticleDetail';
import { authOptions } from '@/authOptions';
import { Report } from '@/components/Chatbot/Chatbot';
import { FloatingButton } from '@/components/Floating/FloatingButton';
import { DetailResponse } from '@/types/crawlingData';
import { getServerSession } from 'next-auth';

export default async function VulnerabilityDbDetailPage({ params }: { params: { id: string } }) {
  const session = await getServerSession(authOptions);

  const [detailResponse, scrapResponse] = await Promise.all([
    fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/vulDb/${params.id}`, { cache: 'no-cache' }),
    fetch(
      `${process.env.NEXT_PUBLIC_API_URL}/api/scrap?userId=${session?.user.id}&articleId=${params.id}`,
      {
        cache: 'no-cache',
      },
    ),
  ]);
  const detailData: DetailResponse = await detailResponse.json();
  const scrapData = await scrapResponse.json();
  const ChatBotReport: Report = {
    title: detailData.articleDetailData.title,
    desc: detailData.articleDetailData.content,
  };

  return (
    <div className="mt-[3.301rem] flex flex-col items-center">
      <ArticleDetail detailData={detailData} isScrapped={scrapData.data.isScrapped} />
      <FloatingButton type="ask" report={ChatBotReport} />
    </div>
  );
}
