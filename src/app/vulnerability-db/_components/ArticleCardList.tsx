'use client';

import { useState } from 'react';
import Link from 'next/link';
import ArticleCard from '@/components/VulDbCard/ArticleCard';
import SuggestionChip from '@/components/Chips/SuggestionChip';
import { ArticleData } from '@/types/crawlingData';

const companyList: string[] = ['마이크로소프트', '오라클', 'GitLab', '아파치', '리눅스'];

type CompanyConfig = {
  마이크로소프트: string;
  오라클: string;
  GitLab: string;
  아파치: string;
  리눅스: string;
};

const companyConfig: CompanyConfig = {
  마이크로소프트: 'microsoft',
  오라클: 'Oracle',
  GitLab: 'GitLab',
  아파치: 'Apache',
  리눅스: 'Linux',
};

export default function ArticleCardList({ dataList }: { dataList: ArticleData[] }) {
  const [toggleLabel, setToggleLabel] = useState(true);
  const checkCompany = (title: string): string => {
    let companyName = 'other';
    companyList.forEach(company => {
      if (title.indexOf(company) === -1) {
        return false;
      } else {
        companyName = companyConfig[company as keyof CompanyConfig];
        return true;
      }
    });
    return companyName;
  };
  const onClickLabel = () => {
    setToggleLabel(prev => !prev);
  };
  const onClickArticle = async (id: string) => {
    try {
      await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/vulDb`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ id }),
      });
    } catch (error) {
      throw new Error('검색어 저장 실패');
    }
  };
  return (
    <div className="flex flex-col gap-[1.6rem]">
      <h2 className="text-[2.4rem] font-bold leading-[2.905rem]">취약점 DB</h2>
      <div className="flex gap-[1.2rem]">
        <Link href="/vulnerability-db?label=hot&page=1" scroll={false}>
          <button type="button" onClick={onClickLabel}>
            <SuggestionChip variant="hot" isActive={toggleLabel} />
          </button>
        </Link>
        <Link href="/vulnerability-db?label=new&page=1" scroll={false}>
          <button type="button" onClick={onClickLabel}>
            <SuggestionChip variant="new" isActive={!toggleLabel} />
          </button>
        </Link>
      </div>
      <div className="flex flex-col gap-[1.6rem]">
        {dataList.map(data => (
          <Link
            key={data.id}
            href={`/vulnerability-db/${data.id}`}
            onClick={() => onClickArticle(data.id)}
          >
            <ArticleCard
              company={checkCompany(data.title)}
              date={data.scrapDate}
              labelList={data.labelList}
              id={data.id}
              title={data.title}
              content={typeof data.content[0] === 'string' ? data.content[0] : 'table 데이터....'}
              keyword={data.keyword}
            />
          </Link>
        ))}
      </div>
    </div>
  );
}
