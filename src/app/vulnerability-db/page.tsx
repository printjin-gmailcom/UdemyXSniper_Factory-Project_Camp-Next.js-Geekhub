import ArticleCardList from '@/app/vulnerability-db/_components/ArticleCardList';
import TopicList from '@/app/vulnerability-db/_components/TopicList';
import VulDbSearchInput from '@/components/Input/VulDbSearchInput';
import Pagination from '@/components/Pagination/Pagination';
import { ArticleData } from '@/types/crawlingData';
import { Suspense } from 'react';
import LogoLoading from '@/components/common/Loading/LogoLoading';
import BannerCardList from './_components/BannerCardList';

type BannerResponse = {
  data: ArticleData[];
};

type VulDbResponse = {
  data: ArticleData[];
  totalLength: number;
};

type LabelUpdateResponse = {
  message: string;
  status: boolean;
};

export default async function VulnerabilityDbPage({
  searchParams,
}: {
  searchParams: { label: string; page: string };
}) {
  const bannerResponse: BannerResponse = await (
    await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/vulDb/banner`, {
      next: { revalidate: 60 * 60 * 24 },
    })
  ).json();

  const labelUpdateResponse: LabelUpdateResponse = await (
    await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/vulDb/updateLabel`, {
      next: { revalidate: 300 },
    })
  ).json();

  if (!labelUpdateResponse.status) {
    console.log(labelUpdateResponse.message);
    // 실패시 예외 처리 필요
  }

  const nowPage = searchParams.page ? Number(searchParams.page) : 1;
  const vulDbResponse: VulDbResponse = await (
    await fetch(
      `${process.env.NEXT_PUBLIC_API_URL}/api/vulDb?label=${searchParams.label}&page=${searchParams.page}`,
      {
        cache: 'no-cache',
      },
    )
  ).json();

  const totalPage =
    vulDbResponse.totalLength % 5 > 0
      ? vulDbResponse.totalLength / 5 + 1
      : vulDbResponse.totalLength / 5;

  return (
    <Suspense fallback={<LogoLoading />}>
      <div className="mb-[19.6rem] mt-[2.701rem] flex flex-col items-center gap-[7.6rem]">
        <BannerCardList dataList={bannerResponse.data} />
        <VulDbSearchInput />
        <div className="mb-[7.6rem] flex gap-[10.2rem]">
          <ArticleCardList dataList={vulDbResponse.data} />
          <TopicList />
        </div>
        <Pagination totalPage={totalPage} nowPage={nowPage} label={searchParams.label} />
      </div>
    </Suspense>
  );
}
